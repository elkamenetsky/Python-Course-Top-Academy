# Работа со срезами списка
# a = list(range(1, 8))
# print(a)
# a[1:3] = [0, 0, 0, 0]  # заменили диапазон от 1 до 3 массивом из 0 (замена + сдвиг на выходе)
# print(a)
# # a[1:2] = 20  # будет ошибка
# a[1:2] = [20]  # так корректно
# print(a)
# a[2] = [50]  # замена элемента вложенным списком
# print(a)
# a[2] = 50  # теперь будет число
# print(a)
# a[3:5] = []  # элементы (0, 0) удалены (заменены пустым списком)
# print(a)
# del a[0:3]  # удаление через функцию del
# print(a)
# del a[:]  # очищение списка (сам список остается)
# print(a)

# Методы списков
# print(dir(list))  # получение методов работы со списком
# a = list(range(1, 8))
# print(a)
# a.append(99)  # добавляет (1) элемент в конец списка
# print(a)
# a.extend([10, 20])  # добавляет множество элементов (1 итерируемый объект) в конец списка (сложение списков)
# print(a)
# a.extend('add')  # разобьет строку на символы
# print(a)
# a.insert(2, 100)  # 1-й параметр: место, 2-й параметр: добавляемый элемент
# print(a)
# a.insert(40, 100)  # добавит в конец, если индекс > диапазона (-1 не сработает, т.к. сдвигает элементы вправо)
# print(a)

# s = []
# n = int(input('Введите количество элементов списка: '))
# for i in range(n):
#     x = int(input('Введите число кратное 3: '))
#     if x % 3 != 0:
#         print(x, 'не делится на 3 без остатка')
#     else:
#         s.append(x)
# print(s)

# b = [11,12,13,14,15]
# b.remove(13)  # удаляет элемент по значению (если несколько, то удаляется только первый)
# print(b)
#
# a = 12
# if a in b:  # если не знаем, какие значения есть в списке (страховка от ValueError)
#     b.remove(a)
# print(b)
#
# last = b.pop()  # если ничего не передать: удалит и возвратит последнее значение
# print(b, last)
# last = b.pop(1)  # то же самое, но по индексу
# print(b, last)
#
# b.clear()  # очистка списка (ничего не принимает и не возвращает; сама переменная не удаляется)
#
# a = [9, 2, 7, 2, 4, 2, 3, 2]
# num = a.count(2)  # посчитал количество (значений) в списке
# print(num)
#
# ind = a.index(2)  # возвращает индекси (значения) в списке (value, start, stop)
# print(ind)
#
# b = a
# print(a, b)
# a.append(20)
# print(a, b)  # изменения произошли в обоих списках
# b = a.copy()  # теперь это два списка по независимым адресам
# a.append(20)
# print(a, b)  # появилась разница, т.к. a был изменен, а b остался независим
#
# a.reverse()  # перестраивает элементы списка в обратном порядке
# print(a)
#
# a.sort()  # по умолчанию: по возрастанию; reverse=True (по убыванию)
# print(a)
#
# c = ['Alexander', 'James', 'Anna', 'William']
# c.sort()  # отсортирует по алфавиту
# print(c)
# c.sort(key=len, reverse=True)  # отсортирует по количеству символов (от большего к меньшему)
# print(c)
#
# d = sorted(a)  # отсортировал (И ВЕРНУЛ - это отличие от sort, который сортирует (изменяет) текущий массив)
# print(d)


# Генерация случайных данных - МОДУЛЬ RANDOM

# import random  # если зажать ctrl и кликнуть, то можной перейти в документ самого модуля
# # импорт модулей принято делать в самом начале файла
# print(random.random())  # рандом в диапазоне от 0 до 1
# print(random.randint(2, 9))  # рандом в диапазоне (от 2 до 9[включительно])
# print(random.randrange(2, 9, 2))  # диапазон, от (2) до (9), не включая последнее значение (9), с шагом (2)

# from random import randint, randrange  # импорт отдельных методов из модуля
# # предпочтительно (!) - так не будут грузиться ВСЕ файлы модуля, а только необходимые
# print(randint(2, 9))  # теперь имя модуля писать не нужно

# from random import *  # из модуля random берем ВСЕ методы

# import random as r  # придумали модулю новое имя (для громоздких имен модулей)
# print(r.random())

# from random import randint as ran  # импорт отдельного метода и новое имя для метода

# import random as r
# print(r.randint(2, 9))
# print(r.randrange(2, 9, 2))
# print(r.uniform(10.5, 25.5))
# print(round(r.uniform(10.5, 25.5), 3))
#
# city = ['Moscow', 'London', 'Berlin', 'Paris', 'Rome']
# print(r.choice(city))  # получаем случайный элемент из итерируемого объекта
# print(r.choices(city, k=3))  # получаем список из 3 элементов (могут повторяться)
# r.shuffle(city)  # shuffle перемешивает элементы списка
# print(city)


import random as r

# Генерация случайных чисел в массив
mas = [r.randint(0, 100) for i in range(10)]
print(mas)

lst = [5, 6, 7, 8, 9]
print(len(lst))